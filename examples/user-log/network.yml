name: echo
type: shell
in:
  - place: message
    pattern: _
out:
  - place: return
    pattern: ~(tr.return)
command: echo ~(in.message)
log:
  # user log before executing `echo` transition
  # input places can be referred using `~(in.*)`
  pre: |
    echo '{ "message": "~(in.message)" }'
  # user log when succeeded
  # output places can be referred using `~(out.*)`
  # shell transitions provide ~(tr.return), ~(tr.stdout) and ~(tr.stderr)
  success: |
    echo '{ "result": "success", "in": "~(in.message)", "out": "~(out.return)", "code": "~(tr.return)", "stdout": "~(tr.stdout)", "stderr": "~(tr.stderr)" }'
  # user log when failed
  # output places cannot be accessed via ~(out.*)
  # shell transitions still provide ~(tr.return), ~(tr.stdout) and ~(tr.stderr)
  # the "log-level" field sets the log level that is controled via options such as `--app-quiet`, `--app-verbose`
  # The value of "log-level" field is one of: `critical`, `error`, `warning`, `info` and `trace`
  failure: |
    echo '{ "log-level": "error", "result": "failure", "in": "~(in.message)", "code": "~(tr.return)", "stdout": "~(tr.stdout)", "stderr": "~(tr.stderr)" }'
